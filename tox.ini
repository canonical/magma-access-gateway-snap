# Copyright 2022 Canonical Ltd.
# See LICENSE file for licensing details.
[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static, unit

[vars]
src_path = {toxinidir}
unit_test_path = {toxinidir}/tests/unit/
integration_test_path = {toxinidir}/tests/integration/
all_path = {[vars]src_path} {[vars]unit_test_path} {[vars]integration_test_path}

[testenv]
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
passenv =
    PYTHONPATH
    HOME
    CHARM_BUILD_DIR
    MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    isort
commands =
    isort {[vars]all_path}
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    flake8
    flake8-docstrings
    flake8-copyright
    flake8-builtins
    pyproject-flake8
    pep8-naming
    isort
commands =
    pflake8 {[vars]all_path}
    isort --check-only --diff {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static]
description = Run static analysis checks
deps =
    -r{toxinidir}/requirements.txt
    mypy
    types-PyYAML
    pytest
    pytest-operator
    types-setuptools
    types-toml
commands =
    mypy -p {[vars]src_path}/magma_access_gateway_configurator -p {[vars]src_path}/magma_access_gateway_installer -p {[vars]src_path}/magma_access_gateway_post_install {posargs}

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r{toxinidir}/requirements.txt
commands =
    coverage run --source={[vars]src_path} --omit=setup.py,*/tests* -m pytest --ignore {[vars]integration_test_path} -v --tb native -s {posargs}
    coverage report

[testenv:integration]
description = Run integration tests
deps =
    pytest
    -r{toxinidir}/requirements.txt
commands =
    pytest -v --tb native --ignore {[vars]unit_test_path} --log-cli-level=INFO -s {posargs}
